<?xml version="1.0"?>
<ruleset name="LEVIY">
    <description>LEVIY Coding Standard</description>

    <arg name="report-width" value="auto"/>

    <rule ref="PSR1"/>
    <rule ref="PSR2">
        <exclude name="PSR2.Methods.FunctionCallSignature.ContentAfterOpenBracket"/>
    </rule>

    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>
    <rule ref="Generic.CodeAnalysis.EmptyStatement"/>
    <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>
    <rule ref="Generic.ControlStructures.InlineControlStructure"/>
    <rule ref="Generic.Formatting.SpaceAfterCast"/>
    <rule ref="Generic.Functions.CallTimePassByReference"/>
    <rule ref="Generic.Metrics.CyclomaticComplexity">
        <properties>
            <property name="complexity" value="6"/>
            <property name="absoluteComplexity" value="8"/>
        </properties>
    </rule>
    <rule ref="Generic.Metrics.NestingLevel">
        <properties>
            <property name="nestingLevel" value="4"/>
            <property name="absoluteNestingLevel" value="6"/>
        </properties>
    </rule>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
    <rule ref="Generic.PHP.LowerCaseConstant"/>
    <rule ref="Generic.PHP.Syntax"/>
    <rule ref="Generic.PHP.DeprecatedFunctions"/>

    <rule ref="Generic.CodeAnalysis.EmptyStatement.DetectedCATCH">
        <type>warning</type>
    </rule>

    <rule ref="PEAR.Commenting.InlineComment"/>

    <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
    <rule ref="Squiz.ControlStructures.ControlSignature"/>
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
    <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
    <rule ref="Squiz.PHP.DiscouragedFunctions"/>
    <rule ref="Squiz.PHP.Eval"/>
    <rule ref="Squiz.PHP.NonExecutableCode"/>
    <rule ref="Squiz.Scope.MemberVarScope"/>
    <rule ref="Squiz.Strings.ConcatenationSpacing">
        <properties>
            <property name="spacing" value="1"/>
        </properties>
    </rule>

    <rule ref="vendor/escapestudios/symfony2-coding-standard/Symfony/Sniffs/Arrays/MultiLineArrayCommaSniff.php"/>
    <rule ref="vendor/escapestudios/symfony2-coding-standard/Symfony/Sniffs/Classes/MultipleClassesOneFileSniff.php"/>
    <rule ref="vendor/escapestudios/symfony2-coding-standard/Symfony/Sniffs/Classes/PropertyDeclarationSniff.php"/>
    <rule ref="vendor/escapestudios/symfony2-coding-standard/Symfony/Sniffs/Commenting/ClassCommentSniff.php">
        <exclude name="Symfony.Commenting.ClassComment.Missing"/>
        <exclude name="Symfony.Commenting.ClassComment.SpacingBeforeTags"/>
    </rule>
    <rule ref="vendor/escapestudios/symfony2-coding-standard/Symfony/Sniffs/Commenting/FunctionCommentSniff.php">
        <exclude name="Symfony.Commenting.FunctionComment.MissingParamComment"/>
        <exclude name="Symfony.Commenting.FunctionComment.SpacingAfterParamName"/>
    </rule>
    <rule ref="vendor/escapestudios/symfony2-coding-standard/Symfony/Sniffs/Formatting/BlankLineBeforeReturnSniff.php"/>
    <rule ref="vendor/escapestudios/symfony2-coding-standard/Symfony/Sniffs/Functions/ScopeOrderSniff.php"/>
    <rule ref="vendor/escapestudios/symfony2-coding-standard/Symfony/Sniffs/NamingConventions/ValidClassNameSniff.php">
        <exclude name="Symfony.NamingConventions.ValidClassName.InvalidAbstractName"/>
        <exclude name="Symfony.NamingConventions.ValidClassName.InvalidInterfaceName"/>
        <exclude name="Symfony.NamingConventions.ValidClassName.InvalidTraitName"/>
        <exclude name="Symfony.NamingConventions.ValidClassName.InvalidExceptionName"/>
    </rule>
    <rule ref="vendor/escapestudios/symfony2-coding-standard/Symfony/Sniffs/Objects/ObjectInstantiationSniff.php"/>
    <rule ref="vendor/escapestudios/symfony2-coding-standard/Symfony/Sniffs/Scope/MethodScopeSniff.php"/>
    <rule ref="vendor/escapestudios/symfony2-coding-standard/Symfony/Sniffs/WhiteSpace/AssignmentSpacingSniff.php"/>
    <rule ref="vendor/escapestudios/symfony2-coding-standard/Symfony/Sniffs/WhiteSpace/BinaryOperatorSpacingSniff.php"/>
    <rule ref="vendor/escapestudios/symfony2-coding-standard/Symfony/Sniffs/WhiteSpace/CommaSpacingSniff.php"/>

    <rule ref="Symfony.Commenting.FunctionComment.Missing">
        <severity>0</severity>
    </rule>
    <rule ref="Symfony.Commenting.FunctionComment.MissingParamTag">
        <severity>0</severity>
    </rule>
    <rule ref="Symfony.Commenting.FunctionComment.MissingReturn">
        <severity>0</severity>
    </rule>
</ruleset>
